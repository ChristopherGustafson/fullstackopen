{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/personService.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","onSubmit","name","number","handleNameChange","handleNumberChange","type","Persons","persons","handleClick","person","toLowerCase","includes","map","id","onClick","baseUrl","PersonService","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","notificationStyles","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyles","color","successStyles","Notification","message","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","showMessage","setTimeout","event","target","preventDefault","existingPerson","find","window","confirm","catch","error","returnedPerson","concat","personToRemove","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02a344ea.chunk.js","sourcesContent":["const Filter = ({filter, handleFilterChange}) => (\n  <div>\n    filter shown with: <input value={filter} onChange={handleFilterChange} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  name,\n  number,\n  handleNameChange,\n  handleNumberChange,\n}) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      name: <input value={name} onChange={handleNameChange} />\n    </div>\n    <div>\n      number: <input value={number} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","const Persons = ({persons, filter, handleClick}) => {\n  return (\n    <>\n      {persons\n        .filter((person) =>\n          person.name.toLowerCase().includes(filter.toLowerCase())\n        )\n        .map((person) => (\n          <div key={person.name}>\n            {person.name} {person.number}{\" \"}\n            <button value={person.id} onClick={handleClick}>\n              delete\n            </button>\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response);\n};\n\nconst PersonService = {\n  getAll,\n  create,\n  update,\n  remove,\n};\nexport default PersonService;\n","// Possible notification types: error, success\n\nconst notificationStyles = {\n  background: \"lightgrey\",\n  fontSize: 20,\n  borderStyle: \"solid\",\n  borderRadius: 5,\n  padding: 10,\n  marginBottom: 10,\n};\n\nconst errorStyles = {\n  color: \"red\",\n};\nconst successStyles = {\n  color: \"green\",\n};\n\nconst Notification = ({message, type}) => {\n  if (message === null) {\n    return null;\n  }\n\n  if (type === \"error\") {\n    return <div style={{...notificationStyles, ...errorStyles}}>{message}</div>;\n  } else if (type === \"success\") {\n    return (\n      <div style={{...notificationStyles, ...successStyles}}>{message}</div>\n    );\n  }\n  return <div style={notificationStyles}>{message}</div>;\n};\n\nexport default Notification;\n","import React, {useState, useEffect} from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport PersonService from \"./services/personService\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    PersonService.getAll().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n\n  // Show message, hide after 5 seconds\n  const showMessage = (message, type) => {\n    if (type === \"error\") {\n      setErrorMessage(message);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    } else if (type === \"success\") {\n      setSuccessMessage(message);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    }\n  };\n\n  /* Event Handlers */\n  const addPerson = (event) => {\n    event.preventDefault();\n    const existingPerson = persons.find((person) => person.name === newName);\n    if (existingPerson) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, replace the old number with a new one?`\n        )\n      ) {\n        PersonService.update(existingPerson.id, {\n          name: newName,\n          number: newNumber,\n        })\n          .then((response) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === response.id ? response : person\n              )\n            );\n            showMessage(\n              `The number of ${response.name} was changed`,\n              \"success\"\n            );\n          })\n          .catch((error) => {\n            showMessage(error.response.data, \"error\");\n          });\n      }\n    } else {\n      PersonService.create({name: newName, number: newNumber})\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          showMessage(\n            `${returnedPerson.name} was added to the phonebook`,\n            \"success\"\n          );\n        })\n        .catch((error) => {\n          showMessage(error.response.data, \"error\");\n        });\n    }\n\n    // Reset input fields\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const removePerson = (event) => {\n    event.preventDefault();\n    const personToRemove = persons.find(\n      (person) => person.id.toString() === event.target.value\n    );\n    if (window.confirm(`Delete ${personToRemove.name}?`)) {\n      PersonService.remove(personToRemove.id)\n        .then((response) => {\n          showMessage(\n            `${personToRemove.name} was removed from the server`,\n            \"success\"\n          );\n        })\n        .catch((error) => {\n          showMessage(\n            `${personToRemove.name} is already removed from the server`,\n            \"error\"\n          );\n        });\n      setPersons(\n        persons.filter((person) => person.id.toString() !== event.target.value)\n      );\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        onSubmit={addPerson}\n        name={newName}\n        number={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n\n      <Persons persons={persons} filter={filter} handleClick={removePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}